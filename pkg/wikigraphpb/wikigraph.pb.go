// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: pkg/wikigraphpb/wikigraph.proto

package wikigraphpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Task_Status int32

const (
	Task_UNKNOWN    Task_Status = 0
	Task_PENDING    Task_Status = 1
	Task_PROCESSING Task_Status = 2
	Task_DONE       Task_Status = 3
)

// Enum value maps for Task_Status.
var (
	Task_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "PROCESSING",
		3: "DONE",
	}
	Task_Status_value = map[string]int32{
		"UNKNOWN":    0,
		"PENDING":    1,
		"PROCESSING": 2,
		"DONE":       3,
	}
)

func (x Task_Status) Enum() *Task_Status {
	p := new(Task_Status)
	*p = x
	return p
}

func (x Task_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_wikigraphpb_wikigraph_proto_enumTypes[0].Descriptor()
}

func (Task_Status) Type() protoreflect.EnumType {
	return &file_pkg_wikigraphpb_wikigraph_proto_enumTypes[0]
}

func (x Task_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_Status.Descriptor instead.
func (Task_Status) EnumDescriptor() ([]byte, []int) {
	return file_pkg_wikigraphpb_wikigraph_proto_rawDescGZIP(), []int{1, 0}
}

type TaskId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TaskId) Reset() {
	*x = TaskId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wikigraphpb_wikigraph_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskId) ProtoMessage() {}

func (x *TaskId) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wikigraphpb_wikigraph_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskId.ProtoReflect.Descriptor instead.
func (*TaskId) Descriptor() ([]byte, []int) {
	return file_pkg_wikigraphpb_wikigraph_proto_rawDescGZIP(), []int{0}
}

func (x *TaskId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *TaskId     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status Task_Status `protobuf:"varint,2,opt,name=status,proto3,enum=wikigraph.Task_Status" json:"status,omitempty"`
	From   string      `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To     string      `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	// If the status is DONE, this is the shortest path, otherwise empty.
	Path []string `protobuf:"bytes,5,rep,name=path,proto3" json:"path,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wikigraphpb_wikigraph_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wikigraphpb_wikigraph_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_pkg_wikigraphpb_wikigraph_proto_rawDescGZIP(), []int{1}
}

func (x *Task) GetId() *TaskId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Task) GetStatus() Task_Status {
	if x != nil {
		return x.Status
	}
	return Task_UNKNOWN
}

func (x *Task) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Task) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Task) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

type FindShortestPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *FindShortestPathRequest) Reset() {
	*x = FindShortestPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wikigraphpb_wikigraph_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindShortestPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindShortestPathRequest) ProtoMessage() {}

func (x *FindShortestPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wikigraphpb_wikigraph_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindShortestPathRequest.ProtoReflect.Descriptor instead.
func (*FindShortestPathRequest) Descriptor() ([]byte, []int) {
	return file_pkg_wikigraphpb_wikigraph_proto_rawDescGZIP(), []int{2}
}

func (x *FindShortestPathRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *FindShortestPathRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type FindShortestPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId *TaskId `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *FindShortestPathResponse) Reset() {
	*x = FindShortestPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wikigraphpb_wikigraph_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindShortestPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindShortestPathResponse) ProtoMessage() {}

func (x *FindShortestPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wikigraphpb_wikigraph_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindShortestPathResponse.ProtoReflect.Descriptor instead.
func (*FindShortestPathResponse) Descriptor() ([]byte, []int) {
	return file_pkg_wikigraphpb_wikigraph_proto_rawDescGZIP(), []int{3}
}

func (x *FindShortestPathResponse) GetTaskId() *TaskId {
	if x != nil {
		return x.TaskId
	}
	return nil
}

type GetTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId *TaskId `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTaskRequest) Reset() {
	*x = GetTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wikigraphpb_wikigraph_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRequest) ProtoMessage() {}

func (x *GetTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wikigraphpb_wikigraph_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRequest.ProtoReflect.Descriptor instead.
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return file_pkg_wikigraphpb_wikigraph_proto_rawDescGZIP(), []int{4}
}

func (x *GetTaskRequest) GetTaskId() *TaskId {
	if x != nil {
		return x.TaskId
	}
	return nil
}

type GetTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *GetTaskResponse) Reset() {
	*x = GetTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wikigraphpb_wikigraph_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResponse) ProtoMessage() {}

func (x *GetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wikigraphpb_wikigraph_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResponse.ProtoReflect.Descriptor instead.
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return file_pkg_wikigraphpb_wikigraph_proto_rawDescGZIP(), []int{5}
}

func (x *GetTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

var File_pkg_wikigraphpb_wikigraph_proto protoreflect.FileDescriptor

var file_pkg_wikigraphpb_wikigraph_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6b, 0x67, 0x2f, 0x77, 0x69, 0x6b, 0x69, 0x67, 0x72, 0x61, 0x70, 0x68, 0x70,
	0x62, 0x2f, 0x77, 0x69, 0x6b, 0x69, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x77, 0x69, 0x6b, 0x69, 0x67, 0x72, 0x61, 0x70, 0x68, 0x22, 0x18, 0x0a, 0x06,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xcf, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x21, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x69,
	0x6b, 0x69, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x3c, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x08,
	0x0a, 0x04, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x22, 0x3d, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x46, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x64, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22,
	0x3c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x36, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x77, 0x69, 0x6b, 0x69, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x32, 0xaa, 0x01, 0x0a, 0x09, 0x57, 0x69, 0x6b, 0x69, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x12, 0x5b, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x69,
	0x6b, 0x69, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x19, 0x2e, 0x77, 0x69,
	0x6b, 0x69, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x6f, 0x64, 0x74, 0x68, 0x65, 0x2f, 0x77, 0x69, 0x6b, 0x69, 0x2d, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x77, 0x69, 0x6b, 0x69, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_wikigraphpb_wikigraph_proto_rawDescOnce sync.Once
	file_pkg_wikigraphpb_wikigraph_proto_rawDescData = file_pkg_wikigraphpb_wikigraph_proto_rawDesc
)

func file_pkg_wikigraphpb_wikigraph_proto_rawDescGZIP() []byte {
	file_pkg_wikigraphpb_wikigraph_proto_rawDescOnce.Do(func() {
		file_pkg_wikigraphpb_wikigraph_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_wikigraphpb_wikigraph_proto_rawDescData)
	})
	return file_pkg_wikigraphpb_wikigraph_proto_rawDescData
}

var file_pkg_wikigraphpb_wikigraph_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_wikigraphpb_wikigraph_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pkg_wikigraphpb_wikigraph_proto_goTypes = []interface{}{
	(Task_Status)(0),                 // 0: wikigraph.Task.Status
	(*TaskId)(nil),                   // 1: wikigraph.TaskId
	(*Task)(nil),                     // 2: wikigraph.Task
	(*FindShortestPathRequest)(nil),  // 3: wikigraph.FindShortestPathRequest
	(*FindShortestPathResponse)(nil), // 4: wikigraph.FindShortestPathResponse
	(*GetTaskRequest)(nil),           // 5: wikigraph.GetTaskRequest
	(*GetTaskResponse)(nil),          // 6: wikigraph.GetTaskResponse
}
var file_pkg_wikigraphpb_wikigraph_proto_depIdxs = []int32{
	1, // 0: wikigraph.Task.id:type_name -> wikigraph.TaskId
	0, // 1: wikigraph.Task.status:type_name -> wikigraph.Task.Status
	1, // 2: wikigraph.FindShortestPathResponse.task_id:type_name -> wikigraph.TaskId
	1, // 3: wikigraph.GetTaskRequest.task_id:type_name -> wikigraph.TaskId
	2, // 4: wikigraph.GetTaskResponse.task:type_name -> wikigraph.Task
	3, // 5: wikigraph.WikiGraph.FindShortestPath:input_type -> wikigraph.FindShortestPathRequest
	5, // 6: wikigraph.WikiGraph.GetTask:input_type -> wikigraph.GetTaskRequest
	4, // 7: wikigraph.WikiGraph.FindShortestPath:output_type -> wikigraph.FindShortestPathResponse
	6, // 8: wikigraph.WikiGraph.GetTask:output_type -> wikigraph.GetTaskResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_pkg_wikigraphpb_wikigraph_proto_init() }
func file_pkg_wikigraphpb_wikigraph_proto_init() {
	if File_pkg_wikigraphpb_wikigraph_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_wikigraphpb_wikigraph_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wikigraphpb_wikigraph_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wikigraphpb_wikigraph_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindShortestPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wikigraphpb_wikigraph_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindShortestPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wikigraphpb_wikigraph_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wikigraphpb_wikigraph_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_wikigraphpb_wikigraph_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_wikigraphpb_wikigraph_proto_goTypes,
		DependencyIndexes: file_pkg_wikigraphpb_wikigraph_proto_depIdxs,
		EnumInfos:         file_pkg_wikigraphpb_wikigraph_proto_enumTypes,
		MessageInfos:      file_pkg_wikigraphpb_wikigraph_proto_msgTypes,
	}.Build()
	File_pkg_wikigraphpb_wikigraph_proto = out.File
	file_pkg_wikigraphpb_wikigraph_proto_rawDesc = nil
	file_pkg_wikigraphpb_wikigraph_proto_goTypes = nil
	file_pkg_wikigraphpb_wikigraph_proto_depIdxs = nil
}
